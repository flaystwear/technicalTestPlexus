version: '3.8'

services:
  # Base de datos H2 (para desarrollo)
  h2-database:
    image: oscarfonts/h2:latest
    container_name: plexus-h2
    ports:
      - "8082:8082"
    environment:
      H2_OPTIONS: "-web -webAllowOthers -tcp -tcpAllowOthers -browser"
    volumes:
      - h2-data:/opt/h2-data
    networks:
      - plexus-network
    restart: unless-stopped

  # Aplicación Spring Boot
  plexus-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: plexus-app
    ports:
      - "8080:8080"
    environment:
      # Configuración de la aplicación
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:h2:mem:testdb
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.h2.Driver
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD: 
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.H2Dialect
      SPRING_H2_CONSOLE_ENABLED: true
      SPRING_SQL_INIT_MODE: always
      # Configuración de logging
      LOGGING_LEVEL_COM_PLEXUS: INFO
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: INFO
      # Configuración de async
      SPRING_TASK_EXECUTION_POOL_CORE_SIZE: 2
      SPRING_TASK_EXECUTION_POOL_MAX_SIZE: 4
      SPRING_TASK_EXECUTION_POOL_QUEUE_CAPACITY: 100
    depends_on:
      - h2-database
    networks:
      - plexus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: plexus-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - plexus-app
    networks:
      - plexus-network
    restart: unless-stopped

volumes:
  h2-data:
    driver: local

networks:
  plexus-network:
    driver: bridge
